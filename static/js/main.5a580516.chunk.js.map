{"version":3,"sources":["components/Bible.jsx","components/Quote.jsx","containers/App.jsx","reportWebVitals.js","index.js"],"names":["Bible","className","onClick","this","props","src","alt","React","Component","Quote","quote","App","showQuote","a","state","givingQuestion","setState","questionReady","fetch","response","json","currentQuote","value","setTimeout","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAceA,E,4JATX,WACI,OACI,qBAAKC,UAAW,QAASC,QAASC,KAAKC,MAAMF,QAA7C,SACI,qBAAKD,UAAW,YAAaI,IAAK,qDAAsDC,IAAK,gB,GALzFC,IAAMC,WCQXC,G,MARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACb,OACI,qBAAKT,UAAW,QAAhB,SACI,oBAAIA,UAAW,YAAf,SAA6BS,QCkC1BC,E,kDAnCd,aAAe,IAAD,8BACb,gBAQDC,UATc,sBASF,8BAAAC,EAAA,0DACuB,IAA9B,EAAKC,MAAMC,eADJ,wBAEV,EAAKC,SAAS,CAAED,gBAAgB,EAAME,eAAe,IAF3C,SAGaC,MAAM,2CAHnB,cAGJC,EAHI,gBAIUA,EAASC,OAJnB,cAIJV,EAJI,OAKV,EAAKM,SAAS,CAAEC,eAAe,EAAMI,aAAcX,EAAMY,QAL/C,UAMJC,YAAW,kBAAM,EAAKP,SAAS,CAACD,gBAAgB,MAAS,KANrD,4CAPX,EAAKD,MAAQ,CACbC,gBAAgB,EAChBE,eAAe,EACfI,aAAc,MALD,E,0CAmBd,WAAU,IAAD,EACgClB,KAAKW,MAArCO,EADA,EACAA,aAAcJ,EADd,EACcA,cAEtB,OADAO,QAAQC,IAAIJ,GAEZ,gCAESA,GAAgBJ,EAAgB,cAAC,EAAD,CAAOP,MAAOW,IAAmB,KAIzE,cAAC,EAAD,CAAOnB,QAASC,KAAKS,mB,GA9BNL,IAAMC,WCQTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCCdQ,EAAQC,KAAK,CACVC,OAAQ,CACNC,SAAU,CAAC,eAAgB,iBAMhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.5a580516.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Bible.css';\r\n\r\nclass Bible extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"Bible\"} onClick={this.props.onClick}>\r\n                <img className={\"bible-img\"} src={\"https://freesvg.org/img/Anonymous_Closed_Bible.png\"} alt={\"bible\"}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Bible;","import React from 'react';\r\nimport './Quote.css';\r\n\r\nconst Quote = ({ quote }) => {\r\n    return (\r\n        <div className={\"Quote\"}>\r\n            <h3 className={'quote-txt'}>{quote}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote;","import React from \"react\";\r\nimport Bible from \"../components/Bible.jsx\";\r\nimport Quote from \"../components/Quote.jsx\";\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\tgivingQuestion: false,\r\n\t\tquestionReady: false,\r\n\t\tcurrentQuote: null,\r\n\t\t};\r\n\t}\r\n\r\n\tshowQuote = async () => {\r\n\t\tif (this.state.givingQuestion === false){\r\n\t\t\tthis.setState({ givingQuestion: true, questionReady: false })\r\n\t\t\tconst response = await fetch(\"https://api.chucknorris.io/jokes/random\");\r\n\t\t\tconst quote = await response.json();\r\n\t\t\tthis.setState({ questionReady: true, currentQuote: quote.value })\r\n\t\t\tawait setTimeout(() => this.setState({givingQuestion: false}), 2000)\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { currentQuote, questionReady } = this.state;\r\n\t\tconsole.log(currentQuote);\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t{(() => {\r\n\t\t\t\treturn currentQuote && questionReady ? <Quote quote={currentQuote} /> : null;\r\n\t\t\t}\r\n\t\t\t)()}\r\n\t\t\r\n\t\t\t<Bible onClick={this.showQuote} />\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n\t}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport WebFont from 'webfontloader';\r\n\r\n\r\nWebFont.load({\r\n   google: {\r\n     families: ['Pacifico:400', 'sans-serif']\r\n   }\r\n});\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}